generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model beboer {
  id                    Int                     @id @default(autoincrement()) @db.UnsignedInt
  bruker_id             Int?                    @unique(map: "bruker_id") @db.UnsignedInt
  fornavn               String                  @db.VarChar(20)
  mellomnavn            String?                 @db.VarChar(40)
  etternavn             String                  @db.VarChar(40)
  fodselsdato           DateTime                @default(now()) @db.DateTime(0)
  adresse               String?                 @db.VarChar(40)
  postnummer            Int?                    @db.UnsignedSmallInt
  telefon               String                  @db.VarChar(40)
  studie_id             Int                     @db.UnsignedInt
  skole_id              Int                     @db.UnsignedInt
  klassetrinn           Int                     @default(0) @db.UnsignedInt
  alkoholdepositum      Boolean                 @default(false)
  rolle_id              Int                     @db.UnsignedInt
  epost                 String?                 @unique(map: "epost") @db.VarChar(40)
  bilde                 String?                 @db.VarChar(256)
  ansiennitet           Int                     @default(0) @db.UnsignedSmallInt
  kjonn                 Int                     @default(0) @db.UnsignedTinyInt
  kundenr               Int?                    @unique(map: "kundenr") @db.UnsignedMediumInt
  status                Int                     @db.TinyInt
  rom_id                Int?                    @db.UnsignedInt
  prefs_id              Int?                    @db.UnsignedInt
  pinkode_id            Int?                    @unique(map: "pinkode_id") @db.UnsignedInt
  rettigheter_id        Int                     @default(4) @db.UnsignedInt
  bruker                bruker?                 @relation(fields: [bruker_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "beboer_ibfk_1")
  pinkode               pinkode?                @relation(fields: [pinkode_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "beboer_ibfk_9")
  rettigheter           rettigheter             @relation(fields: [rettigheter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "beboer_ibfk_8")
  rolle                 rolle                   @relation(fields: [rolle_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "beboer_ibfk_3")
  rom                   rom?                    @relation(fields: [rom_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "beboer_ibfk_2")
  skole                 skole                   @relation(fields: [skole_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "beboer_ibfk_4")
  studie                studie                  @relation(fields: [studie_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "beboer_ibfk_5")
  beboer_verv           beboer_verv[]
  drikke_pafyll         drikke_pafyll[]
  kjop                  kjop[]
  kryss                 kryss[]
  kunngjoring           kunngjoring[]
  romhistorikk          romhistorikk[]
  storhybelliste_velger storhybelliste_velger[]
  vare_pafyll           vare_pafyll[]

  @@index([rettigheter_id], map: "rettigheter_id")
  @@index([rolle_id], map: "rolle_id")
  @@index([rom_id], map: "rom_id")
  @@index([skole_id], map: "skole_id")
  @@index([studie_id], map: "studie_id")
}

model beboer_verv {
  beboer_id Int    @db.UnsignedInt
  verv_id   Int    @db.UnsignedInt
  beboer    beboer @relation(fields: [beboer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "beboer_verv_ibfk_1")
  verv      verv   @relation(fields: [verv_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "beboer_verv_ibfk_2")

  @@unique([beboer_id, verv_id], map: "beboer_id")
  @@index([verv_id], map: "verv_id")
}

model bruker {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  passord     String    @db.VarChar(120)
  salt        String    @db.VarChar(64)
  dato        DateTime? @db.DateTime(0)
  glemt_token String?   @db.VarChar(256)
  beboer      beboer?
  vakt        vakt[]
}

model drikke {
  id              Int              @id @default(autoincrement()) @db.UnsignedInt
  navn            String           @db.VarChar(256)
  pris            Float
  aktiv           Boolean          @default(true)
  kommentar       String?          @db.TinyText
  produktnr       Int?             @db.UnsignedInt
  kategori_id     Int?             @db.UnsignedInt
  drikke_kategori drikke_kategori? @relation(fields: [kategori_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "drikke_ibfk_1")
  drikke_pafyll   drikke_pafyll[]
  kryss           kryss[]

  @@index([kategori_id], map: "kategori_id")
}

model drikke_kategori {
  id     Int      @id @default(autoincrement()) @db.UnsignedInt
  navn   String   @db.VarChar(40)
  farge  String   @default("#000000") @db.VarChar(128)
  drikke drikke[]
}

model drikke_pafyll {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  beboer_id Int      @db.UnsignedInt
  drikke_id Int      @db.UnsignedInt
  antall    Int      @db.SmallInt
  tid       DateTime @default(now()) @db.DateTime(0)
  beboer    beboer   @relation(fields: [beboer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "drikke_pafyll_ibfk_1")
  drikke    drikke   @relation(fields: [drikke_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "drikke_pafyll_ibfk_2")

  @@index([beboer_id], map: "beboer_id")
  @@index([drikke_id], map: "drikke_id")
}

model kjop {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  beboer_id Int      @db.UnsignedInt
  vare_id   Int      @db.UnsignedInt
  antall    Int      @db.SmallInt
  tid       DateTime @default(now()) @db.DateTime(0)
  beboer    beboer   @relation(fields: [beboer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "kjop_ibfk_2")
  vare      vare     @relation(fields: [vare_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "kjop_ibfk_1")

  @@index([beboer_id], map: "beboer_id")
  @@index([vare_id], map: "vare_id")
}

model kryss {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  beboer_id Int      @db.UnsignedInt
  drikke_id Int      @db.UnsignedInt
  antall    Int      @db.SmallInt
  tid       DateTime @default(now()) @db.DateTime(0)
  fakturert Boolean  @default(false)
  beboer    beboer   @relation(fields: [beboer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "kryss_ibfk_1")
  drikke    drikke   @relation(fields: [drikke_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "kryss_ibfk_2")

  @@index([beboer_id], map: "beboer_id")
  @@index([drikke_id], map: "drikke_id")
}

model kunngjoring {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  tittel    String   @db.VarChar(45)
  tekst     String?  @db.Text
  publisert DateTime @default(now()) @db.DateTime(0)
  beboer_id Int      @db.UnsignedInt
  beboer    beboer   @relation(fields: [beboer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "kunngjoring_ibfk_1")

  @@index([beboer_id], map: "beboer_id")
}

model rolle {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  navn      String   @db.VarChar(20)
  regitimer Int      @default(0) @db.UnsignedTinyInt
  vakter_h  Int      @default(0) @db.UnsignedTinyInt
  vakter_v  Int      @default(0) @db.UnsignedTinyInt
  beboer    beboer[]
}

model rom {
  id                                                              Int                     @id @default(autoincrement()) @db.UnsignedInt
  romtype_id                                                      Int                     @db.UnsignedInt
  navn                                                            String                  @db.VarChar(20)
  romtype                                                         romtype                 @relation(fields: [romtype_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "rom_ibfk_1")
  beboer                                                          beboer[]
  romhistorikk                                                    romhistorikk[]
  storhybelliste_rom                                              storhybelliste_rom[]
  storhybelliste_velger_romTostorhybelliste_velger_gammelt_rom_id storhybelliste_velger[] @relation("romTostorhybelliste_velger_gammelt_rom_id")
  storhybelliste_velger_romTostorhybelliste_velger_nytt_rom_id    storhybelliste_velger[] @relation("romTostorhybelliste_velger_nytt_rom_id")

  @@index([romtype_id], map: "romtype_id")
}

model romhistorikk {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  rom_id     Int       @db.UnsignedInt
  beboer_id  Int       @db.UnsignedInt
  innflyttet DateTime  @db.DateTime(0)
  utflyttet  DateTime? @db.DateTime(0)
  beboer     beboer    @relation(fields: [beboer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "romhistorikk_ibfk_1")
  rom        rom       @relation(fields: [rom_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "romhistorikk_ibfk_2")

  @@index([beboer_id], map: "beboer_id")
  @@index([rom_id], map: "rom_id")
}

model romtype {
  id   Int    @id @default(autoincrement()) @db.UnsignedInt
  navn String @db.VarChar(20)
  rom  rom[]
}

model skole {
  id     Int      @id @default(autoincrement()) @db.UnsignedInt
  navn   String   @db.VarChar(20)
  beboer beboer[]
}

model studie {
  id     Int      @id @default(autoincrement()) @db.UnsignedInt
  navn   String   @db.VarChar(20)
  beboer beboer[]
}

model vare {
  id            Int            @id @default(autoincrement()) @db.UnsignedInt
  navn          String         @db.VarChar(255)
  beholdning    Int            @default(0) @db.SmallInt
  kategori_id   Int?           @db.UnsignedInt
  aktiv         Boolean?
  pris          Decimal?       @db.Decimal(65, 2)
  produktnr     Int?           @db.UnsignedMediumInt
  vare_kategori vare_kategori? @relation(fields: [kategori_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "vare_ibfk_1")
  kjop          kjop[]
  vare_pafyll   vare_pafyll[]

  @@index([kategori_id], map: "kategori_id")
}

model vare_kategori {
  id    Int    @id @default(autoincrement()) @db.UnsignedInt
  navn  String @db.VarChar(255)
  farge String @default("#000000") @db.VarChar(128)
  vare  vare[]
}

model vare_pafyll {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  beboer_id Int      @db.UnsignedInt
  vare_id   Int      @db.UnsignedInt
  antall    Int      @db.SmallInt
  tid       DateTime @default(now()) @db.DateTime(0)
  beboer    beboer   @relation(fields: [beboer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "vare_pafyll_ibfk_2")
  vare      vare     @relation(fields: [vare_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "vare_pafyll_ibfk_1")

  @@index([beboer_id], map: "beboer_id")
  @@index([vare_id], map: "vare_id")
}

model verv {
  id          Int           @id @default(autoincrement()) @db.UnsignedInt
  navn        String        @unique(map: "navn") @db.VarChar(20)
  regitimer   Int           @default(0) @db.UnsignedTinyInt
  utvalg      Boolean       @default(false)
  epost       String?       @db.VarChar(40)
  beskrivelse String?       @db.Text
  beboer_verv beboer_verv[]
}

model vakt {
  id           Int      @id @default(autoincrement()) @db.UnsignedInt
  bruker_id    Int?     @db.UnsignedInt
  vakttype     String   @db.VarChar(1)
  dato         DateTime @db.Date
  bekreftet    Boolean?
  bytte        Boolean?
  autogenerert Boolean? @default(true)
  dobbelvakt   Boolean?
  straffevakt  Boolean?
  vaktbytte_id String?  @db.VarChar(255)
  bruker       bruker?  @relation(fields: [bruker_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "vakt_ibfk_1")

  @@index([bruker_id], map: "bruker_id")
}

model pinkode {
  id         Int     @id @default(autoincrement()) @db.UnsignedInt
  kode       String? @db.VarChar(20)
  resep      Boolean @default(false)
  vinkjeller Boolean @default(false)
  beboer     beboer?
}

model rettigheter {
  id     Int      @id @default(autoincrement()) @db.UnsignedInt
  navn   String   @unique(map: "navn") @db.VarChar(20)
  nivaa  Int      @db.UnsignedTinyInt
  beboer beboer[]
}

model storhybelliste {
  id                    Int                     @id @default(autoincrement()) @db.UnsignedInt
  navn                  String                  @db.VarChar(128)
  paamelding_start      DateTime?               @db.DateTime(0)
  velging_start         DateTime?               @db.DateTime(0)
  velger                Int?                    @db.UnsignedInt
  status                Int                     @default(0) @db.UnsignedTinyInt
  lagd                  DateTime                @default(now()) @db.DateTime(0)
  storhybelliste_rom    storhybelliste_rom[]
  storhybelliste_velger storhybelliste_velger[]
}

model storhybelliste_rom {
  storhybelliste_id Int            @db.UnsignedInt
  rom_id            Int            @db.UnsignedInt
  tatt              Boolean        @default(false)
  rom               rom            @relation(fields: [rom_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "storhybelliste_rom_ibfk_2")
  storhybelliste    storhybelliste @relation(fields: [storhybelliste_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "storhybelliste_rom_ibfk_1")

  @@id([storhybelliste_id, rom_id])
  @@index([rom_id], map: "rom_id")
}

model storhybelliste_velger {
  storhybelliste_id                             Int            @db.UnsignedInt
  beboer_id                                     Int            @db.UnsignedInt
  plass                                         Int?           @db.UnsignedInt
  gammelt_rom_id                                Int?           @db.UnsignedInt
  nytt_rom_id                                   Int?           @db.UnsignedInt
  beboer                                        beboer         @relation(fields: [beboer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "storhybelliste_velger_ibfk_2")
  rom_romTostorhybelliste_velger_gammelt_rom_id rom?           @relation("romTostorhybelliste_velger_gammelt_rom_id", fields: [gammelt_rom_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "storhybelliste_velger_ibfk_3")
  rom_romTostorhybelliste_velger_nytt_rom_id    rom?           @relation("romTostorhybelliste_velger_nytt_rom_id", fields: [nytt_rom_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "storhybelliste_velger_ibfk_4")
  storhybelliste                                storhybelliste @relation(fields: [storhybelliste_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "storhybelliste_velger_ibfk_1")

  @@id([storhybelliste_id, beboer_id])
  @@index([beboer_id], map: "beboer_id")
  @@index([gammelt_rom_id], map: "gammelt_rom_id")
  @@index([nytt_rom_id], map: "nytt_rom_id")
}
